/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.czetsuyatech.kafka.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class RandomTempAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4191354614517036693L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RandomTempAvroModel\",\"namespace\":\"com.czetsuyatech.kafka.avro.model\",\"fields\":[{\"name\":\"deviceId\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"temp\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":4,\"scale\":1}},{\"name\":\"createdAt\",\"type\":[\"null\",\"long\"],\"logicalType\":[\"null\",\"date\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<RandomTempAvroModel> ENCODER =
      new BinaryMessageEncoder<RandomTempAvroModel>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<RandomTempAvroModel> DECODER =
      new BinaryMessageDecoder<RandomTempAvroModel>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<RandomTempAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<RandomTempAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<RandomTempAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<RandomTempAvroModel>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this RandomTempAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a RandomTempAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a RandomTempAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static RandomTempAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private long deviceId;
   private long id;
   private java.nio.ByteBuffer temp;
   private java.lang.Long createdAt;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public RandomTempAvroModel() {}

  /**
   * All-args constructor.
   * @param deviceId The new value for deviceId
   * @param id The new value for id
   * @param temp The new value for temp
   * @param createdAt The new value for createdAt
   */
  public RandomTempAvroModel(java.lang.Long deviceId, java.lang.Long id, java.nio.ByteBuffer temp, java.lang.Long createdAt) {
    this.deviceId = deviceId;
    this.id = id;
    this.temp = temp;
    this.createdAt = createdAt;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return deviceId;
    case 1: return id;
    case 2: return temp;
    case 3: return createdAt;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: deviceId = (java.lang.Long)value$; break;
    case 1: id = (java.lang.Long)value$; break;
    case 2: temp = (java.nio.ByteBuffer)value$; break;
    case 3: createdAt = (java.lang.Long)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'deviceId' field.
   * @return The value of the 'deviceId' field.
   */
  public long getDeviceId() {
    return deviceId;
  }


  /**
   * Sets the value of the 'deviceId' field.
   * @param value the value to set.
   */
  public void setDeviceId(long value) {
    this.deviceId = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'temp' field.
   * @return The value of the 'temp' field.
   */
  public java.nio.ByteBuffer getTemp() {
    return temp;
  }


  /**
   * Sets the value of the 'temp' field.
   * @param value the value to set.
   */
  public void setTemp(java.nio.ByteBuffer value) {
    this.temp = value;
  }

  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public java.lang.Long getCreatedAt() {
    return createdAt;
  }


  /**
   * Sets the value of the 'createdAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.lang.Long value) {
    this.createdAt = value;
  }

  /**
   * Creates a new RandomTempAvroModel RecordBuilder.
   * @return A new RandomTempAvroModel RecordBuilder
   */
  public static com.czetsuyatech.kafka.avro.model.RandomTempAvroModel.Builder newBuilder() {
    return new com.czetsuyatech.kafka.avro.model.RandomTempAvroModel.Builder();
  }

  /**
   * Creates a new RandomTempAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RandomTempAvroModel RecordBuilder
   */
  public static com.czetsuyatech.kafka.avro.model.RandomTempAvroModel.Builder newBuilder(com.czetsuyatech.kafka.avro.model.RandomTempAvroModel.Builder other) {
    if (other == null) {
      return new com.czetsuyatech.kafka.avro.model.RandomTempAvroModel.Builder();
    } else {
      return new com.czetsuyatech.kafka.avro.model.RandomTempAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new RandomTempAvroModel RecordBuilder by copying an existing RandomTempAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new RandomTempAvroModel RecordBuilder
   */
  public static com.czetsuyatech.kafka.avro.model.RandomTempAvroModel.Builder newBuilder(com.czetsuyatech.kafka.avro.model.RandomTempAvroModel other) {
    if (other == null) {
      return new com.czetsuyatech.kafka.avro.model.RandomTempAvroModel.Builder();
    } else {
      return new com.czetsuyatech.kafka.avro.model.RandomTempAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for RandomTempAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RandomTempAvroModel>
    implements org.apache.avro.data.RecordBuilder<RandomTempAvroModel> {

    private long deviceId;
    private long id;
    private java.nio.ByteBuffer temp;
    private java.lang.Long createdAt;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.czetsuyatech.kafka.avro.model.RandomTempAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.deviceId)) {
        this.deviceId = data().deepCopy(fields()[0].schema(), other.deviceId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.temp)) {
        this.temp = data().deepCopy(fields()[2].schema(), other.temp);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[3].schema(), other.createdAt);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing RandomTempAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.czetsuyatech.kafka.avro.model.RandomTempAvroModel other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.deviceId)) {
        this.deviceId = data().deepCopy(fields()[0].schema(), other.deviceId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.id)) {
        this.id = data().deepCopy(fields()[1].schema(), other.id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.temp)) {
        this.temp = data().deepCopy(fields()[2].schema(), other.temp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[3].schema(), other.createdAt);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'deviceId' field.
      * @return The value.
      */
    public long getDeviceId() {
      return deviceId;
    }


    /**
      * Sets the value of the 'deviceId' field.
      * @param value The value of 'deviceId'.
      * @return This builder.
      */
    public com.czetsuyatech.kafka.avro.model.RandomTempAvroModel.Builder setDeviceId(long value) {
      validate(fields()[0], value);
      this.deviceId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'deviceId' field has been set.
      * @return True if the 'deviceId' field has been set, false otherwise.
      */
    public boolean hasDeviceId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'deviceId' field.
      * @return This builder.
      */
    public com.czetsuyatech.kafka.avro.model.RandomTempAvroModel.Builder clearDeviceId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.czetsuyatech.kafka.avro.model.RandomTempAvroModel.Builder setId(long value) {
      validate(fields()[1], value);
      this.id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.czetsuyatech.kafka.avro.model.RandomTempAvroModel.Builder clearId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'temp' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getTemp() {
      return temp;
    }


    /**
      * Sets the value of the 'temp' field.
      * @param value The value of 'temp'.
      * @return This builder.
      */
    public com.czetsuyatech.kafka.avro.model.RandomTempAvroModel.Builder setTemp(java.nio.ByteBuffer value) {
      validate(fields()[2], value);
      this.temp = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'temp' field has been set.
      * @return True if the 'temp' field has been set, false otherwise.
      */
    public boolean hasTemp() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'temp' field.
      * @return This builder.
      */
    public com.czetsuyatech.kafka.avro.model.RandomTempAvroModel.Builder clearTemp() {
      temp = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public java.lang.Long getCreatedAt() {
      return createdAt;
    }


    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public com.czetsuyatech.kafka.avro.model.RandomTempAvroModel.Builder setCreatedAt(java.lang.Long value) {
      validate(fields()[3], value);
      this.createdAt = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public com.czetsuyatech.kafka.avro.model.RandomTempAvroModel.Builder clearCreatedAt() {
      createdAt = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public RandomTempAvroModel build() {
      try {
        RandomTempAvroModel record = new RandomTempAvroModel();
        record.deviceId = fieldSetFlags()[0] ? this.deviceId : (java.lang.Long) defaultValue(fields()[0]);
        record.id = fieldSetFlags()[1] ? this.id : (java.lang.Long) defaultValue(fields()[1]);
        record.temp = fieldSetFlags()[2] ? this.temp : (java.nio.ByteBuffer) defaultValue(fields()[2]);
        record.createdAt = fieldSetFlags()[3] ? this.createdAt : (java.lang.Long) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<RandomTempAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<RandomTempAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<RandomTempAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<RandomTempAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










